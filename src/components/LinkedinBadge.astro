---
// src/components/LinkedInBadge.astro

// You can pass the profile vanity URL as a prop for reusability
interface Props {
  vanityName?: string;
  fullName?: string;
}

const { 
  vanityName = 'david-j-barrios', 
  fullName = 'David J. Barrios' 
} = Astro.props;

const profileUrl = `https://es.linkedin.com/in/${vanityName}/es?trk=profile-badge`;
---

<div id="linkedin-badge-container" class="relative w-fit">

  <div 
    id="linkedin-badge-placeholder"
    class="badge-base LI-profile-badge hidden" 
    data-locale="es_ES"
    data-size="medium"
    data-theme="dark"
    data-type="HORIZONTAL"
    data-vanity={vanityName}
    data-version="v1"
  >
    <a class="badge-base__link LI-simple-link" href={profileUrl}>{fullName}</a>
  </div>

  <a 
    id="linkedin-fallback" 
    href={profileUrl}
    target="_blank" 
    rel="noopener noreferrer"
    class="hidden transition-opacity duration-300 inline-flex items-center
        gap-x-2 p-2 px-4 bg-[#0A66C2] text-white font-bold rounded-md
        no-underline hover:bg-[#004182]"
  >
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
      <path d="M20.5 2h-17A1.5 1.5 0 002 3.5v17A1.5 1.5 0 003.5 22h17a1.5 1.5 0 001.5-1.5v-17A1.5 1.5
          0 0020.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 118.25 6.5 1.75 1.75 0 016.5 8.25zM19
          19h-3v-4.74c0-1.42-.6-1.93-1.38-1.93A1.74 1.74 0 0013 14.19a.66.66 0 000 .14V19h-3v-9h2.9v1.3a3.11
          3.11 0 012.7-1.4c1.55 0 3.36.86 3.36 3.66z"></path>
    </svg>
    <span>{fullName}</span>
  </a>

</div>

<style>
  #linkedin-badge-container {
    /* Scale the container down to 85% of its original size */
    transform: scale(0.7);
    /* Ensure it scales from the top-left corner */
    transform-origin: left;
  }
</style>

<script>
  function setupLinkedInBadge() {
    const badgePlaceholder = document.getElementById('linkedin-badge-placeholder');
    const fallbackLink = document.getElementById('linkedin-fallback');

    if (!badgePlaceholder || !fallbackLink) return;

    const linkedInScript = document.createElement('script');
    linkedInScript.src = 'https://platform.linkedin.com/badges/js/profile.js';
    linkedInScript.async = true;
    linkedInScript.defer = true;
    linkedInScript.type = 'text/javascript';

    linkedInScript.onload = () => {
      badgePlaceholder.classList.remove('hidden');
    };

    linkedInScript.onerror = () => {
      console.error('LinkedIn badge script failed to load. Displaying fallback.');
      fallbackLink.classList.remove('hidden');
    };

    document.body.appendChild(linkedInScript);
  }

  document.addEventListener('astro:page-load', setupLinkedInBadge);
</script>