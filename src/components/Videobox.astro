---
import { Image } from 'astro:assets';

export interface Props {
  id: string;
  thumbnailUrl: string;
  description: string;
  fallbackThumbnailUrl: string;
}

const { id, thumbnailUrl, description, fallbackThumbnailUrl } = Astro.props
---

<article
  class="rounded-sm shadow-md overflow-hidden
    transition-shadow duration-300 cursor-pointer bg-black
    hover:border-gray-700"
  data-trigger="play-video"
  data-videoid={id}
>
  <Image
    id={`thumbnail-${id}`}
    class="w-full h-auto aspect-video object-cover transition-transform duration-300 group-hover:scale-105"
    src={thumbnailUrl}
    alt={description}
    width="1280"
    height="720"
    format="webp"
    loading="lazy"
  />
  <div class="p-4 py-15">
    <p
      class="font-medium text-sm line-clamp-3 text-gray-200"
    >
      {description}
    </p>
  </div>
</article>

<script define:vars={{ id, fallbackThumbnailUrl }}>
  const imgElement = document.getElementById(`thumbnail-${id}`);

  if (imgElement) {
    const handleLoad = () => {
    
      // Default youtube thumbnail dimensions
      if (imgElement.naturalWidth <= 120 && imgElement.naturalHeight <= 90) {
        imgElement.src = fallbackThumbnailUrl;
        imgElement.srcset = ''; // Force browser to fetch new image
        console.log(`Fallback to low quality thumbnail for video ${id}; hq not found.`);
      }
      imgElement.removeEventListener('load', handleLoad);
    };

    imgElement.addEventListener('load', handleLoad);

    // In case the image is already loaded from the browser cache,
    // the 'load' event might not fire. This handles that edge case.
    if (imgElement.complete && imgElement.naturalWidth > 0) {
      handleLoad();
    }
  }
</script>
